services:
  # TimescaleDB Database
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: timescaledb
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: centinel_test
      POSTGRES_PASSWORD: postpass
      TIMESCALEDB_TELEMETRY: off
    ports:
      - "5432:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
    networks:
      - centinel-network

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - centinel-network
    healthcheck:
      test: ["CMD", "sh", "-c", "timeout 5 bash -c '</dev/tcp/localhost/2181'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - centinel-network

  # Monitor Service
  monitor-service:
    build:
      context: ./monitorService
      dockerfile: Dockerfile
    container_name: monitor-service
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_CLOUD_ZOOKEEPER_CONNECT_STRING: zookeeper:2181
      SPRING_DATASOURCE_URL: jdbc:postgresql://timescaledb:5432/postgres
      SPRING_DATASOURCE_USERNAME: centinal_test
      SPRING_DATASOURCE_PASSWORD: postpass
    ports:
      - "8081:8080"
    networks:
      - centinel-network
    restart: unless-stopped

  # Analysis Service
  analysis-service:
    build:
      context: ./analysisService
      dockerfile: Dockerfile
    container_name: analysis-service
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka:
        condition: service_started
      timescaledb:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_CLOUD_ZOOKEEPER_CONNECT_STRING: zookeeper:2181
      SPRING_DATASOURCE_URL: jdbc:postgresql://timescaledb:5432/postgres
      SPRING_DATASOURCE_USERNAME: centinel_test
      SPRING_DATASOURCE_PASSWORD: postpass
    ports:
      - "8082:8080"
    networks:
      - centinel-network
    restart: unless-stopped

  # Executor Service
  executor-service:
    build:
      context: ./executorService
      dockerfile: Dockerfile
    container_name: executor-service
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka:
        condition: service_started
      timescaledb:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_CLOUD_ZOOKEEPER_CONNECT_STRING: zookeeper:2181
      SPRING_DATASOURCE_URL: jdbc:postgresql://timescaledb:5432/postgres
      SPRING_DATASOURCE_USERNAME: centinel_test
      SPRING_DATASOURCE_PASSWORD: postpass
    ports:
      - "8083:8080"
    networks:
      - centinel-network
    restart: unless-stopped

volumes:
  timescale_data:
  zookeeper_data:
  zookeeper_logs:
  kafka_data:

networks:
  centinel-network:
    driver: bridge